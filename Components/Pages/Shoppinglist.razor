@page "/shoppinglist"
@using RecipeBook.Data

<h1>Shopping list</h1>

<Button Color="Color.Success" Clicked="Store">Store the ingredients</Button>
<Button Color="Color.Danger" Clicked="Clear">Clear the list</Button>

<Fields>
    <Field>
        <FieldLabel RequiredIndicator> Name </FieldLabel>
        <FieldBody>
            <TextEdit @bind-Text="newIngredient.Name" Placeholder="Name" />
        </FieldBody>
    </Field>
    <Field>
        <FieldLabel>Amount</FieldLabel>
        <FieldBody>
            <NumericEdit @bind-Value="newIngredient.Amount" Placeholder="Amount" />
        </FieldBody>
    </Field>
    <Field>
        <FieldLabel>Unit</FieldLabel>
        <FieldBody>
            <Select @bind-SelectedValue="newIngredient.Unit">
                @foreach (var unit in units)
                {
                    <SelectItem TValue="string">@unit</SelectItem>
                }
            </Select>
        </FieldBody>
    </Field>
</Fields>

<Button Color="Color.Primary" Clicked="AddItem">Add item</Button>

<ListGroup Flush Mode="ListGroupMode.Selectable">
    @foreach (var ingredient in items)
    {
        <ListGroupItem Name="@ingredient.Id.ToString()" Clicked="() => EditIngredient(ingredient)">
            <Check TValue="bool" Checked="@ingredient.IsDone"></Check>
            @ingredient.Name
            @ingredient.Amount
            @ingredient.Unit
        </ListGroupItem>
    }
</ListGroup>



@code {
    private List<ShoppingIngredient> items = new();
    private ShoppingIngredient newIngredient = new ShoppingIngredient();
    private List<String> units = Data.Units.IngredientList;

    private void AddItem()
    {
        items.Add(newIngredient);
        newIngredient = new ShoppingIngredient();
    }

    private void EditIngredient(ShoppingIngredient ingredient)
    {
        ingredient.IsDone = !ingredient.IsDone;
    }

    //Store the ingredients into ingredient bank
    private void Store()
    {

    }

    private void Clear()
    {
        items.Clear();
    }
}
